#include <SPI.h>
#include <SD.h>
int TSL230_Pin1 = 2; // TSL230 output for sensor 1
int TSL230_Pin2 = 3; // TSL230 output for sensor 2
int TSL230_Pin3 = 4; // TSL230 output for sensor 3
int TSL230_Pin4 = 5; // TSL230 output for sensor 4

int TSL230_samples = 6;
const int chipSelect = 10;

void setup() {
  // Open serial communications and wait for port to open:
  Serial.begin(9600);
  setupTSL230();
  while (!Serial) {
    ; // wait for serial port to connect. Needed for native USB port only
  }


  Serial.print("Initializing SD card...");

  // see if the card is present and can be initialized:
  if (!SD.begin(chipSelect)) {
    Serial.println("Card failed, or not present");
    // don't do anything more:
    while (1);
  }
  Serial.println("card initialized.");
}

void loop() {
  // Read light level for sensor 1
  float lightLevel1 = readTSL230(TSL230_Pin1, TSL230_samples);
  // Read light level for sensor 2
  float lightLevel2 = readTSL230(TSL230_Pin2, TSL230_samples);
  // Read light level for sensor 3
  float lightLevel3 = readTSL230(TSL230_Pin3, TSL230_samples);
  // Read light level for sensor 4
  float lightLevel4 = readTSL230(TSL230_Pin4, TSL230_samples);
  // make a string for assembling the data to log:
  String dataString = "";

  // read four sensors and append to the string:
  for (int analogPin = 2; analogPin < 3; analogPin++) {
    {int sensor = analogRead(analogPin);
      dataString += lightLevel1;
      dataString += " ";
      dataString += "S1";
      dataString += " ";
      dataString += lightLevel2;
      dataString += " ";
      dataString += "S2";
      dataString += " ";
      dataString += lightLevel3;
      dataString += " ";
      dataString += "S3";
      dataString += " ";
      dataString += lightLevel4;
      dataString += " ";
      dataString += "S4";
      dataString += " ";
    }
  }

  // open the file. note that only one file can be open at a time,
  // so you have to close this one before opening another.
  File dataFile = SD.open("datalog.txt", FILE_WRITE);

  // if the file is available, write to it:
  if (dataFile) {
    dataFile.println(dataString);
    dataFile.close();
    // print to the serial port too:
    Serial.println(dataString);
  }
  // if the file isn't open, pop up an error:
  else {
    Serial.println("error opening datalog.txt");
  }
}
