
import cv2 as cv
import matplotlib.pyplot as plt
import numpy as np
from scipy import signal as sp
import random



def puzzle (piece1,piece2,param,index,coverge):
    warp1 = np.array([[-1.09550563883299	,0.124407515196343,	275.114213239516],
                      [-0.178073201126225,	-1.32576625514976	,230.060083125364]])
    index= str(index)
    index = 'piece_' + index+'_relative'
    index= index+'.jpeg'
    img=piece1
    img2 = piece2
    if param==1:
        anchor = cv.warpAffine(img2, warp1,  (771, 481))
        cv.imwrite('1.jpeg', anchor,(771, 481))
        img2 = anchor
    sift = cv.SIFT_create()
    kp, des = sift.detectAndCompute(img, None)
    img_with_kp = cv.drawKeypoints(img, kp, None)
    point_data = []
    for i in kp:
        x, y = i.pt
        scale=i.size
        orientation = i.angle
        point_data.append((x, y, scale, orientation))
    anchor=img2
    kp2, des2 = sift.detectAndCompute(img2,None)
    img2kp= cv.drawKeypoints(img2, kp, None)
    point_data2 = []
    for i in kp2:
        x, y = i.pt
        scale=i.size
        orientation = i.angle
        point_data2.append((x, y, scale, orientation))


    phi=[]
    keep=[]
    pairs=[]
    match=[]

    for i in range (len(kp)):
        for j in range(len(kp2)):
            pairs.append([(np.linalg.norm(des[i]-[des2[j]])),i,j])
        keep.append([sorted(pairs)[0],sorted(pairs)[1]])
        pairs=[]
    for i in keep:
        if i[1][0]!=0:
            if i[0][0]/i[1][0] < 0.8:
                phi.append(i[0])
                match.append(cv.DMatch(i[0][1], i[0][2], i[0][0]))

    img3 = cv.drawMatches(img, kp, img2, kp2, match, None, flags=cv.DrawMatchesFlags_NOT_DRAW_SINGLE_POINTS)
    limit = 10
    best = sorted(match, key = lambda x:x.distance)[:limit]
    best_matches_drawn = cv.drawMatches(img, kp, img2, kp2, best, None, matchColor=(0,0,255), flags=cv.DRAW_MATCHES_FLAGS_NOT_DRAW_SINGLE_POINTS)
    #plt.imshow(best_matches_drawn),plt.show()
    x1=[]
    y1=[]
    x2=[]
    y2=[]
    for i in phi:
        x1.append(point_data[i[1]][0])
        y1.append(point_data[i[1]][1])
        x2.append(point_data2[i[2]][0])
        y2.append(point_data2[i[2]][1])
    src=np.column_stack((np.array(x1),np.array(y1)))
    dest=np.column_stack((np.array(x2),np.array(y2)))
    threshold=1
    inliers=[]
    total = []
    best_match=[]
    num=[]
    random.seed(1)
    for i in range (5000):
        i=  random.randint(0,(len(src)-1))
        j = random.randint(0,(len(src)-1))
        k = random.randint(0,(len(src)-1))
        if  i !=j !=k:
                    warp_mat = cv.getAffineTransform(
                        np.float32([[src[i][0], src[i][1]], [src[j][0], src[j][1]], [src[k][0], src[k][1]]]),
                        np.float32([[dest[i][0], dest[i][1]], [dest[j][0], dest[j][1]], [dest[k][0], dest[k][1]]]))
                    src_pts_transformed = np.hstack((src, np.ones((src.shape[0], 1))))
                    dst_pts_transformed = np.dot(warp_mat, src_pts_transformed.T).T
                    residuals = np.linalg.norm(dst_pts_transformed - dest, axis=1)
                    for t in residuals:
                        if t<threshold:
                            inliers.append(t)
                    total.append([len(inliers),[warp_mat]])
                    num.append(len(inliers))
                    if len(inliers) ==10:
                        z=((np.float32([[src[i][0], src[i][1]], [src[j][0], src[j][1]], [src[k][0], src[k][1]]]),
                        np.float32([[dest[i][0], dest[i][1]], [dest[j][0], dest[j][1]], [dest[k][0], dest[k][1]]])))
                    inliers=[]
    T=[0]
    for i in total:
        if  i[0]==max(num):
            T[0]=i[1]


    pts1 = np.float32([[0, 0],
                       [0, 0],
                       [0, 0]])

    pts2 = np.float32([[0, 0],
                       [0, 0],
                       [0, 0]])



    M = cv.getAffineTransform(pts1, pts2)
    M[0][0]=T[0][0][0][0]
    M[0][1]=T[0][0][0][1]
    M[0][2]=T[0][0][0][2]
    M[1][0]=T[0][0][1][0]
    M[1][1]=T[0][0][1][1]
    M[1][2]=T[0][0][1][2]


    last_img=cv.warpAffine(img, M,(771, 481))
    cv.imwrite(index, last_img,(771, 481))
    for_coverge = last_img
    for_coverge = np.where(for_coverge > 0, 1, 0)
    total = for_coverge + coverge

    last_img=np.where(anchor > 0,0,last_img)
    last_img=(anchor+last_img)
    cv.imshow("together", last_img)
    cv.waitKey(0)
    cv.destroyAllWindows()
    if param==2:
        cv.imshow("together",last_img)
        cv.waitKey(0)
        cv.destroyAllWindows()
        plt.imshow(total, cmap='gray')
        plt.colorbar(cmap='gray')
        plt.show()
        cv.imwrite('total.png', total, (771, 481))
    return(last_img,total)

x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_12.jpg',0),cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_1.jpg',0),1,12,np.zeros((481,771)))
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_19.jpg',0),x,0,19,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_41.jpg',0),x,0,41,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_18.jpg',0),x,0,18,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_40.jpg',0),x,0,40,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_54.jpg',0),x,0,54,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_14.jpg',0),x,0,14,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_43.jpg',0),x,0,43,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_33.jpg',0),x,0,33,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_30.jpg',0),x,0,30,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_57.jpg',0),x,0,57,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_10.jpg',0),x,0,10,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_13.jpg',0),x,0,13,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_26.jpg',0),x,0,26,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_6.jpg',0),x,0,6,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_8.jpg',0),x,0,8,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_56.jpg',0),x,0,56,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_20.jpg',0),x,0,20,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_5.jpg',0),x,0,5,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_17.jpg',0),x,0,17,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_16.jpg',0),x,0,16,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_27.jpg',0),x,0,27,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_21.jpg',0),x,0,21,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_53.jpg',0),x,0,53,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_11.jpg',0),x,0,11,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_29.jpg',0),x,0,29,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_28.jpg',0),x,0,28,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_4.jpg',0),x,0,4,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_15.jpg',0),x,0,15,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_7.jpg',0),x,0,7,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_25.jpg',0),x,0,25,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_35.jpg',0),x,0,35,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_42.jpg',0),x,0,42,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_45.jpg',0),x,0,45,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_46.jpg',0),x,0,46,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_49.jpg',0),x,0,49,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_51.jpg',0),x,0,51,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_2.jpg',0),x,0,2,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_38.jpg',0),x,0,38,y)
x,y=puzzle(cv.imread('C:\\Users\\Bar Blas\\Desktop\\puzzles\\puzzles\\puzzle_affine_9\\pieces\\piece_47.jpg',0),x,2,47,y)